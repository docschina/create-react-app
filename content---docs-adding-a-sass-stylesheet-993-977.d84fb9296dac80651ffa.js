(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{144:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return r})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return l}));n(58),n(31),n(22),n(23),n(59),n(0);var o=n(228);function a(){return(a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e}).apply(this,arguments)}var r={id:"adding-a-sass-stylesheet",title:"Adding a Sass Stylesheet",sidebar_label:"Adding Sass Stylesheets"},s=[],i={rightToc:s},p="wrapper";function l(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,["components"]);return Object(o.b)(p,a({},i,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Note: this feature is available with ",Object(o.b)("inlineCode",{parentName:"p"},"react-scripts@2.0.0")," and higher.")),Object(o.b)("p",null,"Generally, we recommend that you don\u2019t reuse the same CSS classes across different components. For example, instead of using a ",Object(o.b)("inlineCode",{parentName:"p"},".Button")," CSS class in ",Object(o.b)("inlineCode",{parentName:"p"},"<AcceptButton>")," and ",Object(o.b)("inlineCode",{parentName:"p"},"<RejectButton>")," components, we recommend creating a ",Object(o.b)("inlineCode",{parentName:"p"},"<Button>")," component with its own ",Object(o.b)("inlineCode",{parentName:"p"},".Button")," styles, that both ",Object(o.b)("inlineCode",{parentName:"p"},"<AcceptButton>")," and ",Object(o.b)("inlineCode",{parentName:"p"},"<RejectButton>")," can render (but ",Object(o.b)("a",a({parentName:"p"},{href:"https://facebook.github.io/react/docs/composition-vs-inheritance.html"}),"not inherit"),")."),Object(o.b)("p",null,"Following this rule often makes CSS preprocessors less useful, as features like mixins and nesting are replaced by component composition. You can, however, integrate a CSS preprocessor if you find it valuable."),Object(o.b)("p",null,"To use Sass, first install ",Object(o.b)("inlineCode",{parentName:"p"},"node-sass"),":"),Object(o.b)("pre",null,Object(o.b)("code",a({parentName:"pre"},{className:"language-sh"}),"$ npm install node-sass --save\n$ # or\n$ yarn add node-sass\n")),Object(o.b)("p",null,"Now you can rename ",Object(o.b)("inlineCode",{parentName:"p"},"src/App.css")," to ",Object(o.b)("inlineCode",{parentName:"p"},"src/App.scss")," and update ",Object(o.b)("inlineCode",{parentName:"p"},"src/App.js")," to import ",Object(o.b)("inlineCode",{parentName:"p"},"src/App.scss"),".\nThis file and any other file will be automatically compiled if imported with the extension ",Object(o.b)("inlineCode",{parentName:"p"},".scss")," or ",Object(o.b)("inlineCode",{parentName:"p"},".sass"),"."),Object(o.b)("p",null,"To share variables between Sass files, you can use Sass imports. For example, ",Object(o.b)("inlineCode",{parentName:"p"},"src/App.scss")," and other component style files could include ",Object(o.b)("inlineCode",{parentName:"p"},'@import "./shared.scss";')," with variable definitions."),Object(o.b)("p",null,"This will allow you to do imports like"),Object(o.b)("pre",null,Object(o.b)("code",a({parentName:"pre"},{className:"language-scss"}),"@import 'styles/_colors.scss'; // assuming a styles directory under src/\n@import '~nprogress/nprogress'; // importing a css file from the nprogress node module\n")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},Object(o.b)("strong",{parentName:"p"},"Note:")," You must prefix imports from ",Object(o.b)("inlineCode",{parentName:"p"},"node_modules")," with ",Object(o.b)("inlineCode",{parentName:"p"},"~")," as displayed above.")),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"node-sass")," also supports the ",Object(o.b)("inlineCode",{parentName:"p"},"SASS_PATH")," variable."),Object(o.b)("p",null,"To use imports relative to a path you specify, and from ",Object(o.b)("inlineCode",{parentName:"p"},"node_modules")," without adding the ",Object(o.b)("inlineCode",{parentName:"p"},"~")," prefix, you can add a ",Object(o.b)("a",a({parentName:"p"},{href:"https://github.com/facebook/create-react-app/blob/master/docusaurus/docs/adding-custom-environment-variables.md#adding-development-environment-variables-in-env"}),Object(o.b)("inlineCode",{parentName:"a"},".env")," file")," at the project root with the variable ",Object(o.b)("inlineCode",{parentName:"p"},"SASS_PATH=node_modules:src"),". To specify more directories you can add them to ",Object(o.b)("inlineCode",{parentName:"p"},"SASS_PATH")," separated by a ",Object(o.b)("inlineCode",{parentName:"p"},":")," like ",Object(o.b)("inlineCode",{parentName:"p"},"path1:path2:path3"),"."),Object(o.b)("p",null,"If you set ",Object(o.b)("inlineCode",{parentName:"p"},"SASS_PATH=node_modules:src"),", this will allow you to do imports like"),Object(o.b)("pre",null,Object(o.b)("code",a({parentName:"pre"},{className:"language-scss"}),"@import 'styles/colors'; // assuming a styles directory under src/, where _colors.scss partial file exists.\n@import 'nprogress/nprogress'; // importing a css file from the nprogress node module\n")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},Object(o.b)("strong",{parentName:"p"},"Note:")," For windows operating system, use below syntax"),Object(o.b)("pre",{parentName:"blockquote"},Object(o.b)("code",a({parentName:"pre"},{}),"SASS_PATH=./node_modules;./src\n"))),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},Object(o.b)("strong",{parentName:"p"},"Tip:")," You can opt into using this feature with ",Object(o.b)("a",a({parentName:"p"},{href:"/docs/adding-a-css-modules-stylesheet"}),"CSS modules")," too!")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},Object(o.b)("strong",{parentName:"p"},"Note:")," If you're using Flow, override the ",Object(o.b)("a",a({parentName:"p"},{href:"https://flow.org/en/docs/config/options/#toc-module-file-ext-string"}),"module.file_ext")," setting in your ",Object(o.b)("inlineCode",{parentName:"p"},".flowconfig")," so it'll recognize ",Object(o.b)("inlineCode",{parentName:"p"},".sass")," or ",Object(o.b)("inlineCode",{parentName:"p"},".scss")," files. You will also need to include the ",Object(o.b)("inlineCode",{parentName:"p"},"module.file_ext")," default settings for ",Object(o.b)("inlineCode",{parentName:"p"},".js"),", ",Object(o.b)("inlineCode",{parentName:"p"},".jsx"),", ",Object(o.b)("inlineCode",{parentName:"p"},".mjs")," and ",Object(o.b)("inlineCode",{parentName:"p"},".json")," files."),Object(o.b)("pre",{parentName:"blockquote"},Object(o.b)("code",a({parentName:"pre"},{}),"[options]\nmodule.file_ext=.js\nmodule.file_ext=.jsx\nmodule.file_ext=.mjs\nmodule.file_ext=.json\nmodule.file_ext=.sass\nmodule.file_ext=.scss\n"))))}l.isMDXComponent=!0},228:function(e,t,n){"use strict";n.d(t,"a",(function(){return i})),n.d(t,"b",(function(){return b}));var o=n(0),a=n.n(o),r=a.a.createContext({}),s=function(e){var t=a.a.useContext(r),n=t;return e&&(n="function"==typeof e?e(t):Object.assign({},t,e)),n},i=function(e){var t=s(e.components);return a.a.createElement(r.Provider,{value:t},e.children)};var p="mdxType",l={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},c=Object(o.forwardRef)((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,i=e.parentName,p=function(e,t){var n={};for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&-1===t.indexOf(o)&&(n[o]=e[o]);return n}(e,["components","mdxType","originalType","parentName"]),c=s(n),b=o,d=c[i+"."+b]||c[b]||l[b]||r;return n?a.a.createElement(d,Object.assign({},{ref:t},p,{components:n})):a.a.createElement(d,Object.assign({},{ref:t},p))}));function b(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,s=new Array(r);s[0]=c;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[p]="string"==typeof e?e:o,s[1]=i;for(var b=2;b<r;b++)s[b]=n[b];return a.a.createElement.apply(null,s)}return a.a.createElement.apply(null,n)}c.displayName="MDXCreateElement"}}]);